/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.robovm.llvm.binding;

public enum CallConv {
  CCallConv(0),
  FastCallConv(8),
  ColdCallConv(9),
  GHCCallConv(10),
  HiPECallConv(11),
  WebKitJSCallConv(12),
  AnyRegCallConv(13),
  PreserveMostCallConv(14),
  PreserveAllCallConv(15),
  SwiftCallConv(16),
  CXXFASTTLSCallConv(17),
  X86StdcallCallConv(64),
  X86FastcallCallConv(65),
  ARMAPCSCallConv(66),
  ARMAAPCSCallConv(67),
  ARMAAPCSVFPCallConv(68),
  MSP430INTRCallConv(69),
  X86ThisCallCallConv(70),
  PTXKernelCallConv(71),
  PTXDeviceCallConv(72),
  SPIRFUNCCallConv(75),
  SPIRKERNELCallConv(76),
  IntelOCLBICallConv(77),
  X8664SysVCallConv(78),
  Win64CallConv(79),
  X86VectorCallCallConv(80),
  HHVMCallConv(81),
  HHVMCCallConv(82),
  X86INTRCallConv(83),
  AVRINTRCallConv(84),
  AVRSIGNALCallConv(85),
  AVRBUILTINCallConv(86),
  AMDGPUVSCallConv(87),
  AMDGPUGSCallConv(88),
  AMDGPUPSCallConv(89),
  AMDGPUCSCallConv(90),
  AMDGPUKERNELCallConv(91),
  X86RegCallCallConv(92),
  AMDGPUHSCallConv(93),
  MSP430BUILTINCallConv(94),
  AMDGPULSCallConv(95),
  AMDGPUESCallConv(96);

  public final int swigValue() {
    return swigValue;
  }

  public static CallConv swigToEnum(int swigValue) {
    CallConv[] swigValues = CallConv.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (CallConv swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + CallConv.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private CallConv() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private CallConv(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private CallConv(CallConv swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

